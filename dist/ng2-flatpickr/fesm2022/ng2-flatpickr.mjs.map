{"version":3,"file":"ng2-flatpickr.mjs","sources":["../../../projects/ng2-flatpickr/src/lib/ng2-flatpickr.component.ts","../../../projects/ng2-flatpickr/src/lib/ng2-flatpickr.directive.ts","../../../projects/ng2-flatpickr/src/lib/ng2-flatpickr.module.ts","../../../projects/ng2-flatpickr/src/ng2-flatpickr.ts"],"sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  forwardRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FlatpickrOptions } from './flatpickr-options.interface';\n\ndeclare var require: any;\n\n// @ts-ignore\nif (typeof window !== 'undefined') {\n  require('flatpickr');\n}\n\n@Component({\n  selector: 'ng2-flatpickr',\n  template: `\n    <div class=\"ng2-flatpickr-input-container\" #flatpickr>\n      @if (!hideButton) {\n        <input\n          class=\"ng2-flatpickr-input {{ addClass }}\"\n          [placeholder]=\"placeholder\"\n          [tabindex]=\"tabindex\"\n          type=\"text\"\n          (focus)=\"onFocus($event)\"\n          data-input\n        />\n      }\n      <ng-content></ng-content>\n    </div>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => Ng2FlatpickrComponent),\n      multi: true,\n    },\n  ],\n})\nexport class Ng2FlatpickrComponent implements AfterViewInit, ControlValueAccessor, OnChanges {\n  public flatpickr: Object | undefined;\n  private _tabindex = 0;\n  onTouchedFn: Function = () => {};\n\n  private defaultFlatpickrOptions: FlatpickrOptions = {\n    wrap: true,\n    clickOpens: true,\n    onChange: (selectedDates: any) => {\n      this.writeValue(selectedDates);\n    },\n  };\n\n  @ViewChild('flatpickr', {\n    static: true,\n  })\n  flatpickrElement: any;\n\n  @Input()\n  config: FlatpickrOptions | undefined;\n\n  @Input()\n  placeholder: string = '';\n\n  @Input()\n  addClass: string = '';\n\n  @Input()\n  setDate: string | Date | undefined;\n\n  @Input()\n  get tabindex() {\n    return this._tabindex;\n  }\n\n  set tabindex(ti: number) {\n    this._tabindex = Number(ti);\n  }\n\n  @Input()\n  hideButton = false;\n\n  ///////////////////////////////////\n\n  writeValue(value: any) {\n    this.propagateChange(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedFn = fn;\n  }\n\n  propagateChange = (_: any) => {};\n\n  ///////////////////////////////////\n\n  setDateFromInput(date: any) {\n    this.flatpickrElement.nativeElement._flatpickr.setDate(date, true);\n  }\n\n  setAltInputPlaceholder(placeholder: string) {\n    this.flatpickrElement.nativeElement._flatpickr.altInput.setAttribute(\n      'placeholder',\n      placeholder,\n    );\n  }\n\n  ngAfterViewInit() {\n    if (this.config) {\n      Object.assign(this.defaultFlatpickrOptions, this.config);\n    }\n    if (this.flatpickrElement.nativeElement.flatpickr) {\n      this.flatpickr = this.flatpickrElement.nativeElement.flatpickr(this.defaultFlatpickrOptions);\n    }\n    if (this.setDate) {\n      this.setDateFromInput(this.setDate);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.flatpickrElement.nativeElement && this.flatpickrElement.nativeElement._flatpickr) {\n      if (changes.hasOwnProperty('setDate') && changes['setDate'].currentValue) {\n        this.setDateFromInput(changes['setDate'].currentValue);\n      }\n\n      if (\n        this.config &&\n        this.config.altInput &&\n        changes.hasOwnProperty('placeholder') &&\n        changes['placeholder'].currentValue\n      ) {\n        this.setAltInputPlaceholder(changes['placeholder'].currentValue);\n      }\n    }\n  }\n\n  onFocus(event: any) {\n    this.onTouchedFn();\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport { FlatpickrOptions } from './flatpickr-options.interface';\nimport { FlatpickrEvent } from './flatpickr-event.interface';\nimport { FlatpickrInstance } from './flatpickr-instance';\nimport { Subscription } from 'rxjs';\nimport { ControlContainer, FormControl, NgControl } from '@angular/forms';\n\n@Directive({\n  selector: '[flatpickr]',\n  exportAs: 'ng2-flatpickr',\n})\nexport class Ng2FlatpickrDirective implements AfterViewInit, OnDestroy, OnInit, OnChanges {\n  /**\n   * The flatpickr configuration as a single object of values.\n   *\n   * See https://chmln.github.io/flatpickr/options/ for full list.\n   */\n  @Input('flatpickr') public flatpickrOptions: FlatpickrOptions | undefined;\n\n  /**\n   * Placeholder for input field.\n   *\n   * Default:  null\n   */\n  @Input('placeholder') public placeholder: string | undefined;\n\n  /**\n   * Exactly the same as date format, but for the altInput field.\n   *\n   * Default:  \"F j, Y\"\n   */\n  @Input('altFormat') public flatpickrAltFormat: string | undefined;\n\n  /**\n   * Show the user a readable date (as per altFormat), but return something\n   * totally different to the server.\n   *\n   * Default:  false\n   */\n  @Input('altInput') public flatpickrAltInput: boolean | undefined;\n\n  /**\n   * This class will be added to the input element created by the altInput\n   * option.\n   *\n   * Default:  \"\"\n   */\n  @Input('altInputClass') public flatpickrAltInputClass: string | undefined;\n\n  /**\n   * Allows the user to enter a date directly input the input field. By\n   * default, direct entry is disabled.\n   *\n   * Default:  false\n   */\n  @Input('allowInput') public flatpickrAllowInput: boolean | undefined;\n\n  /**\n   * Instead of body, appends the calendar to the specified node instead.\n   *\n   * Default:  null\n   */\n  @Input('appendTo') public flatpickrAppendTo: any; // HTMLElement\n\n  /**\n   * Whether clicking on the input should open the picker.\n   * You could disable this if you wish to open the calendar manually\n   * with.open().\n   *\n   * Default:  true\n   */\n  @Input('clickOpens') public flatpickrClickOpens: boolean | undefined;\n\n  /**\n   * A string of characters which are used to define how the date will be\n   * displayed in the input box.\n   * See https://chmln.github.io/flatpickr/formatting/ for supported tokens.\n   *\n   * Default:  \"Y-m-d\"\n   */\n  @Input('dateFormat') public flatpickrDateFormat: string | undefined;\n\n  /**\n   * Sets the initial selected date(s).\n   *\n   * If you're using {mode: \"multiple\"} or a range calendar supply an Array of\n   * Date objects or an Array of date strings which follow your dateFormat.\n   *\n   * Otherwise, you can supply a single Date object or a date string.\n   *\n   * Default:  null\n   */\n  @Input('defaultDate') public flatpickrDefaultDate: string | Date | string[] | Date[] | undefined;\n\n  /**\n   * Disable an array of specific dates, date ranges, or functions to disable\n   * dates. See https://chmln.github.io/flatpickr/examples/#disabling-specific-dates\n   *\n   * Default:  []\n   */\n  @Input('disable') public flatpickrDisable: string[] | Date[] | Function | undefined;\n\n  /**\n   * Set disableMobile to true to always use the non-native picker. By\n   * default, Flatpickr utilizes native datetime widgets unless certain\n   * options (e.g. disable) are used.\n   *\n   * Default:  false\n   */\n  @Input('disableMobile') public flatpickrDisableMobile: boolean | undefined;\n\n  /**\n   * Enable an array of specific dates, date ranges, or functions to enable\n   * dates. See https://chmln.github.io/flatpickr/examples/#disabling-all-dates-except-select-few\n   *\n   * Default:  []\n   */\n  @Input('enable') public flatpickrEnable: string[] | Date[] | Function | undefined;\n\n  /**\n   * Enables time picker.\n   *\n   * Default:  false\n   */\n  @Input('enableTime') public flatpickrEnableTime: boolean | undefined;\n\n  /**\n   * Enables seconds in the time picker.\n   *\n   * Default:  false\n   */\n  @Input('enableSeconds') public flatpickrEnableSeconds: boolean | undefined;\n\n  /**\n   * Adjusts the step for the hour input (incl. scrolling).\n   *\n   * Default:  1\n   */\n  @Input('hourIncrement') public flatpickrHourIncrement: number | undefined;\n\n  /**\n   * Displays the calendar inline.\n   *\n   * Default:  false\n   */\n  @Input('inline') public flatpickrInline: boolean | undefined;\n\n  /**\n   * Use a specific locale for the flatpickr instance.\n   *\n   * Default:  null\n   */\n  @Input('locale') public flatpickrLocale: Object | undefined;\n\n  /**\n   * The maximum date that a user can pick to (inclusive).\n   *\n   * Default:  null\n   */\n  @Input('maxDate') public flatpickrMaxDate: string | Date | undefined;\n\n  /**\n   * The minimum date that a user can start picking from (inclusive).\n   *\n   * Default:  null\n   */\n  @Input('minDate') public flatpickrMinDate: string | Date | undefined;\n\n  /**\n   * Adjusts the step for the minute input (incl. scrolling).\n   *\n   * Default:  5\n   */\n  @Input('minuteIncrement') public flatpickrMinuteIncrement: number | undefined;\n\n  /**\n   * \"single\", \"multiple\", or \"range\"\n   *\n   * Default:  \"single\"\n   */\n  @Input('mode') public flatpickrMode: string | undefined;\n\n  /**\n   * HTML for the arrow icon, used to switch months.\n   *\n   * Default:  \">\"\n   */\n  @Input('nextArrow') public flatpickrNextArrow: string | undefined;\n\n  /**\n   * Hides the day selection in calendar. Use it along with enableTime to\n   * create a time picker.\n   *\n   * Default:  false\n   */\n  @Input('noCalendar') public flatpickrNoCalendar: boolean | undefined;\n\n  /**\n   * Function that expects a date string and must return a Date object.\n   *\n   * Default:  false\n   */\n  @Input('parseDate') public flatpickrParseDate: Function | undefined;\n\n  /**\n   * HTML for the left arrow icon.\n   *\n   * Default:  \"<\"\n   */\n  @Input('prevArrow') public flatpickrPrevArrow: string | undefined;\n\n  /**\n   * Show the month using the shorthand version (ie, Sep instead of September).\n   *\n   * Default:  false\n   */\n  @Input('shorthandCurrentMonth') public flatpickrShorthandCurrentMonth: boolean | undefined;\n\n  /**\n   * Position the calendar inside the wrapper and next to the input element\n   * (Leave false unless you know what you're doing).\n   *\n   * Default:  false\n   */\n  @Input('static') public flatpickrStatic: boolean | undefined;\n\n  /**\n   * Displays time picker in 24 hour mode without AM/PM selection when enabled.\n   *\n   * Default:  false\n   */\n  @Input('time_24hr') public flatpickrTime_24hr: boolean | undefined;\n\n  @Input('utc') public flatpickrUtc: boolean | undefined;\n\n  /**\n   * Enables display of week numbers in calendar.\n   *\n   * Default:  false\n   */\n  @Input('weekNumbers') public flatpickrWeekNumbers: boolean | undefined;\n\n  /**\n   * Custom elements and input groups.\n   *\n   * Default:  false\n   */\n  @Input('wrap') public flatpickrWrap: boolean | undefined;\n\n  /**\n   * onChange gets triggered when the user selects a date, or changes the time on a selected date.\n   *\n   * Default:  null\n   */\n  @Output('onChange') public flatpickrOnChange: EventEmitter<FlatpickrEvent> = new EventEmitter();\n\n  /**\n   * onClose gets triggered when the calendar is closed.\n   *\n   * Default:  null\n   */\n  @Output('onClose') public flatpickrOnClose: EventEmitter<FlatpickrEvent> = new EventEmitter();\n\n  /**\n   * onOpen gets triggered when the calendar is opened.\n   *\n   * Default:  null\n   */\n  @Output('onOpen') public flatpickrOnOpen: EventEmitter<FlatpickrEvent> = new EventEmitter();\n\n  /**\n   * onReady gets triggered once the calendar is in a ready state.\n   *\n   * Default:  null\n   */\n  @Output('onReady') public flatpickrOnReady: EventEmitter<FlatpickrEvent> = new EventEmitter();\n\n  /** Allow double-clicking on the control to open/close it. */\n  @HostListener('dblclick')\n  public onClick() {\n    if (this.flatpickr) {\n      this.flatpickr.toggle();\n    }\n  }\n\n  protected globalOnChange: Function | undefined;\n  protected globalOnClose: Function | undefined;\n  protected globalOnOpen: Function | undefined;\n  protected globalOnReady: Function | undefined;\n\n  protected flatpickr: FlatpickrInstance | undefined;\n  protected formControlListener: Subscription | undefined;\n\n  /** Allow access properties using index notation */\n  [key: string]: any;\n\n  constructor(\n    protected parent: ControlContainer,\n    protected ngControl: NgControl,\n    protected element: ElementRef,\n    protected renderer: Renderer2,\n  ) {}\n\n  get control(): FormControl {\n    if (!this.parent.formDirective) {\n      throw new Error('Ng2FlatpickrDirective must be used within a form group');\n    }\n    const control = this.parent ? this.parent.formDirective.getControl(this.ngControl) : null;\n    if (!control) {\n      throw new Error('Control cannot be found in the form group');\n    }\n    return control;\n  }\n\n  ngAfterViewInit() {\n    /** We cannot initialize the flatpickr instance in ngOnInit(); it will\n     randomize the date when the form control initializes. */\n    let nativeElement = this.element.nativeElement;\n\n    if (typeof nativeElement === 'undefined' || nativeElement === null) {\n      throw 'Error: invalid input element specified';\n    }\n\n    if (this.flatpickrOptions && this.flatpickrOptions.wrap) {\n      this.renderer.setAttribute(this.element.nativeElement, 'data-input', '');\n      nativeElement = nativeElement.parentNode;\n    }\n\n    this.flatpickr = <FlatpickrInstance>nativeElement.flatpickr(this.flatpickrOptions);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      this.flatpickr &&\n      this.flatpickrAltInput &&\n      this.flatpickr.altInput &&\n      changes.hasOwnProperty('placeholder') &&\n      changes['placeholder'].currentValue\n    ) {\n      this.flatpickr.altInput.setAttribute('placeholder', changes['placeholder'].currentValue);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.flatpickr) {\n      this.flatpickr.destroy();\n    }\n\n    if (this.formControlListener) {\n      this.formControlListener.unsubscribe();\n      this.formControlListener = undefined;\n    }\n\n    this.flatpickrOnChange = new EventEmitter<FlatpickrEvent>();\n    this.flatpickrOnClose = new EventEmitter<FlatpickrEvent>();\n    this.flatpickrOnOpen = new EventEmitter<FlatpickrEvent>();\n    this.flatpickrOnReady = new EventEmitter<FlatpickrEvent>();\n  }\n\n  ngOnInit() {\n    this.globalOnChange = this.flatpickrOptions ? this.flatpickrOptions.onChange : undefined;\n    this.globalOnClose = this.flatpickrOptions ? this.flatpickrOptions.onClose : undefined;\n    this.globalOnOpen = this.flatpickrOptions ? this.flatpickrOptions.onOpen : undefined;\n    this.globalOnReady = this.flatpickrOptions ? this.flatpickrOptions.onReady : undefined;\n\n    this.flatpickrOptions = {\n      altFormat: this.getOption('altFormat'),\n      altInput: this.getOption('altInput'),\n      altInputClass: this.getOption('altInputClass'),\n      allowInput: this.getOption('allowInput'),\n      appendTo: this.getOption('appendTo'),\n      clickOpens: this.getOption('clickOpens', true),\n      dateFormat: this.getOption('dateFormat'),\n      defaultDate: this.getOption('defaultDate'),\n      disable: this.getOption('disable'),\n      disableMobile: this.getOption('disableMobile'),\n      enable: this.getOption('enable'),\n      enableTime: this.getOption('enableTime'),\n      enableSeconds: this.getOption('enableSeconds'),\n      hourIncrement: this.getOption('hourIncrement'),\n      inline: this.getOption('inline'),\n      locale: this.getOption('locale'),\n      maxDate: this.getOption('maxDate'),\n      minDate: this.getOption('minDate'),\n      minuteIncrement: this.getOption('minuteIncrement'),\n      mode: this.getOption('mode'),\n      nextArrow: this.getOption('nextArrow'),\n      noCalendar: this.getOption('noCalendar'),\n      onChange: this.eventOnChange.bind(this),\n      onClose: this.eventOnClose.bind(this),\n      onOpen: this.eventOnOpen.bind(this),\n      onReady: this.eventOnReady.bind(this),\n      parseDate: this.getOption('parseDate'),\n      prevArrow: this.getOption('prevArrow'),\n      shorthandCurrentMonth: this.getOption('shorthandCurrentMonth'),\n      static: this.getOption('static'),\n      time_24hr: this.getOption('time_24hr'),\n      utc: this.getOption('utc'),\n      weekNumbers: this.getOption('weekNumbers'),\n      wrap: this.getOption('wrap', true),\n    };\n\n    // Remove unset properties\n    Object.keys(this.flatpickrOptions).forEach((key: string) => {\n      if (this.flatpickrOptions && this.flatpickrOptions[key] === undefined) {\n        delete this.flatpickrOptions[key];\n      }\n    });\n\n    if (this.control) {\n      this.formControlListener = this.control.valueChanges.subscribe((value: any) => {\n        if (!(value instanceof Date)) {\n          // Quietly update the value of the form control to be a\n          // Date object. This avoids any external subscribers\n          // from being notified a second time (once for the user\n          // initiated event, and once for our conversion to\n          // Date()).\n          this.control.setValue(new Date('' + value), {\n            onlySelf: true,\n            emitEvent: false,\n            emitModelToViewChange: false,\n            emitViewToModelChange: false,\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Fire off the event emitter for the directive element, and also for the\n   * global onChange callback, if defined.\n   */\n  protected eventOnChange(selectedDates: Date[], dateStr: string, instance: Object): void {\n    let event: FlatpickrEvent = {\n      selectedDates: selectedDates,\n      dateStr: dateStr,\n      instance: instance,\n    };\n    if (this.flatpickrOnChange) {\n      this.flatpickrOnChange.emit(event);\n    }\n    if (this.globalOnChange) {\n      this.globalOnChange(event);\n    }\n  }\n\n  /**\n   * Fire off the event emitter for the directive element, and also for the\n   * global onClose callback, if defined.\n   */\n  protected eventOnClose(selectedDates: Date[], dateStr: string, instance: Object): void {\n    let event: FlatpickrEvent = {\n      selectedDates: selectedDates,\n      dateStr: dateStr,\n      instance: instance,\n    };\n    if (this.flatpickrOnClose) {\n      this.flatpickrOnClose.emit(event);\n    }\n    if (this.globalOnClose) {\n      this.globalOnClose(event);\n    }\n  }\n\n  /**\n   * Fire off the event emitter for the directive element, and also for the\n   * global onOpen callback, if defined.\n   */\n  protected eventOnOpen(selectedDates: Date[], dateStr: string, instance: Object): void {\n    let event: FlatpickrEvent = {\n      selectedDates: selectedDates,\n      dateStr: dateStr,\n      instance: instance,\n    };\n    if (this.flatpickrOnOpen) {\n      this.flatpickrOnOpen.emit(event);\n    }\n    if (this.globalOnOpen) {\n      this.globalOnOpen(event);\n    }\n  }\n\n  /**\n   * Fire off the event emitter for the directive element, and also for the\n   * global onReady callback, if defined.\n   */\n  protected eventOnReady(selectedDates: Date[], dateStr: string, instance: Object): void {\n    let event: FlatpickrEvent = {\n      selectedDates: selectedDates,\n      dateStr: dateStr,\n      instance: instance,\n    };\n    if (this.flatpickrOnReady) {\n      this.flatpickrOnReady.emit(event);\n    }\n    if (this.globalOnReady) {\n      this.globalOnReady(event);\n    }\n  }\n\n  /**\n   * Return the configuration value for option {option}, or {defaultValue} if it\n   * doesn't exist.\n   */\n  protected getOption(option: string, defaultValue?: any): any {\n    let localName = 'flatpickr' + option.substring(0, 1).toUpperCase() + option.substring(1);\n\n    if (typeof this[localName] !== 'undefined') {\n      return this[localName];\n    } else if (this.flatpickrOptions && typeof this.flatpickrOptions[option] !== 'undefined') {\n      return this.flatpickrOptions[option];\n    } else {\n      return defaultValue;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Ng2FlatpickrComponent } from './ng2-flatpickr.component';\nimport { Ng2FlatpickrDirective } from './ng2-flatpickr.directive';\nimport 'flatpickr';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [Ng2FlatpickrComponent, Ng2FlatpickrDirective],\n  exports: [Ng2FlatpickrComponent, Ng2FlatpickrDirective],\n})\nexport class Ng2FlatpickrModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}